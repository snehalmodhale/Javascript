<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>


    <!-- For Each and MAP
     

    Used to Iterate Array object

     while
     do while
     for loop
     for in- Iterate Array and Object and Return Key:values
     for of- Must iterable - only values

     for each vs map method


     ***************************************************************

     For Each

     Used to iterate Array object
     
     Nothing Return i.e undefined

     i.e  It doesn’t create a new array and doesn’t return anything.
     
     Not a Chainable- Not apply Array methods like sort,reverse,filter,find

     syntax

     1 argument compulsory and 2 optional


     A function that accepts up to three arguments.
      forEach calls the callbackfn function one time for each element in the array.

     data.forEach((val,index,array)=>{
     })

     


    



    
    
    -->

    <script>


        const user = [

            {
                id: 1,
                name: 'John',
                skill: 'React',
                ctc: '10LPA'
            },
            {
                id: 2,
                name: 'Peter',
                skill: 'JS',
                ctc: '5LPA'
            }

        ]

        // ******************************


        // syntax

        const result = user.forEach((val, index, array) => {
            // console.log(val);

            return val;

        })

        console.log(result);//undefined


        // **********************************************************************************

        // Recommended way


        // Map
        // Used to iterate array object
        //Return new Array
        //Chainable-Array methods work like sort,filter ,find


        // i.e Calls a defined callback function on each element of an array, and returns an array that contains the results.



        // syntax- data.map((val,index,array)=>{
        //     console.log(val)
        //     console.log(index)
        //     console.log(array)
        // })


        const user2 = [

            {
                id: 1,
                name: 'Abil',
                skill: 'React',
                ctc: '10LPA'
            },
            {
                id: 2,
                name: 'Pranav',
                skill: 'JS',
                ctc: '5LPA'
            }

        ]

        const result3 = user2.map((val) => {
            // console.log(val)
            return val;
        })

        console.log(result3);

    </script>

</body>

</html>